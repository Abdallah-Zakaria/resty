{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/Footer/Footer.js","components/Results/Results.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","React","Component","Form","clickHandler","e","preventDefault","superagent","target","method","value","toLowerCase","url","then","data","props","updateState","header","count","body","result","id","title","onSubmit","this","type","name","required","htmlFor","defaultChecked","data-testid","Footer","Results","src","payload","theme","App","state","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAaeA,G,6KARX,OACE,iCACE,6C,GAJaC,IAAMC,Y,iBCuCZC,G,kNApCbC,aAAe,SAACC,GACdA,EAAEC,iBACFC,IAAWF,EAAEG,OAAOC,OAAOC,MAAMC,eAAeN,EAAEG,OAAOI,IAAIF,OAAOG,MAAK,SAAAC,GACvE,EAAKC,MAAMC,YAAY,CAAEJ,IAAKP,EAAEG,OAAOI,IAAIF,MAAOD,OAAQJ,EAAEG,OAAOC,OAAOC,MAAOO,OAAQH,EAAKG,OAAQC,MAAOJ,EAAKK,KAAKD,MAAOE,OAAQN,EAAKK,W,uDAI7I,OACE,+BACE,qBAAKE,GAAG,YAAR,SACE,uBAAMC,MAAM,YAAaC,SAAUC,KAAKpB,aAAxC,UACE,qBAAKiB,GAAG,SAAR,SACE,uBAAOI,KAAK,MAAMJ,GAAG,MAAMK,KAAK,MAAMC,UAAQ,MAEhD,sBAAKN,GAAG,UAAR,UACE,wBAAOO,QAAQ,MAAf,gBACE,uBAAOH,KAAK,QAAQJ,GAAG,MAAMK,KAAK,SAAShB,MAAM,MAAMiB,UAAQ,EAACE,gBAAc,OAEhF,wBAAOD,QAAQ,OAAf,iBACE,uBAAOH,KAAK,QAAQJ,GAAG,OAAOK,KAAK,SAAShB,MAAM,YAEpD,wBAAOkB,QAAQ,MAAf,gBACE,uBAAOH,KAAK,QAAQJ,GAAG,MAAMK,KAAK,SAAShB,MAAM,WAEnD,wBAAOkB,QAAQ,SAAf,mBACE,uBAAOH,KAAK,QAAQJ,GAAG,SAASK,KAAK,SAAShB,MAAM,cAEtD,wBAAQoB,cAAY,SAASL,KAAK,SAAlC,+B,GA7BKxB,IAAMC,YCOV6B,G,6KANX,OACE,iCAAQ,6D,GAHO9B,IAAMC,Y,wBCaZ8B,E,uKATX,OACA,sBAAKF,cAAY,OAAOT,GAAG,UAA3B,UACE,cAAC,IAAD,CAAWY,IAAKT,KAAKT,MAAMmB,QAAQjB,OAAQkB,MAAM,YACjD,cAAC,IAAD,CAAWF,IAAKT,KAAKT,MAAMmB,QAAQd,OAAQe,MAAM,mB,GALjClC,IAAMC,WC2BbkC,G,kNAtBbC,MAAQ,CACNzB,IAAK,GACLH,OAAQ,GACRQ,OAAQ,GACRC,MAAO,EACPE,OAAQ,I,EAEVJ,YAAc,SAACF,GACb,EAAKwB,SAAS,CAAE1B,IAAKE,EAAKF,IAAKH,OAAQK,EAAKL,OAAQQ,OAAQH,EAAKG,OAAQC,MAAOJ,EAAKI,MAAOE,OAAQN,K,uDAGpG,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAME,YAAaQ,KAAKR,cACxB,cAAC,EAAD,CAASkB,QAASV,KAAKa,QACvB,cAAC,EAAD,W,GAjBUpC,IAAMC,YCGTqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3bffd2ae.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nclass Header extends React.Component{\n  render(){\n    return(\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport superagent from 'superagent';\nimport './Form.scss';\n\nclass Form extends React.Component {\n\n  clickHandler = (e) => {\n    e.preventDefault();\n    superagent[e.target.method.value.toLowerCase()](e.target.url.value).then(data => {\n      this.props.updateState({ url: e.target.url.value, method: e.target.method.value, header: data.header, count: data.body.count, result: data.body })\n    })\n  }\n  render() {\n    return (\n      <main>\n        <div id='container'>\n          <form title='live APIs'  onSubmit={this.clickHandler}>\n            <div id='inputs'>\n              <input type='url' id='url' name='url' required />\n            </div>\n            <div id='methods'>\n              <label htmlFor='GET'>GET\n                <input type='radio' id='GET' name='method' value='GET' required defaultChecked />\n              </label>\n              <label htmlFor='POST'>POST\n                <input type='radio' id='POST' name='method' value='POST' />\n              </label>\n              <label htmlFor='PUT'>PUT\n                <input type='radio' id='PUT' name='method' value='PUT' />\n              </label>\n              <label htmlFor='DELETE' >DELETE\n                <input type='radio' id='DELETE' name='method' value='DELETE' />\n              </label>\n              <button data-testid='button' type=\"submit\">GO!</button>\n            </div>\n          </form>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default Form;","import React from 'react';\nimport './Footer.scss';\n\nclass Footer extends React.Component{\n  render(){\n    return(\n      <footer><p>&copy; 2018 Code Fellows</p></footer>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Results.scss';\n\nimport ReactJson from 'react-json-view'\n\nclass Results extends React.Component {\n  render() {\n    return(\n    <div data-testid='test' id='results'>\n      <ReactJson src={this.props.payload.header} theme=\"monokai\" />\n      <ReactJson src={this.props.payload.result} theme=\"monokai\" />\n    </div>\n    )\n  }\n}\n\nexport default Results;","import React from 'react';\n\nimport Header from '../Header/Header.js';\nimport Form from '../Form/Form.js';\nimport Footer from '../Footer/Footer.js';\nimport Results from '../Results/Results.js'\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    url: '',\n    method: '',\n    header: {},\n    count: 0,\n    result: {}\n  }\n  updateState = (data) => {\n    this.setState({ url: data.url, method: data.method, header: data.header, count: data.count, result: data })\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        <Form updateState={this.updateState} />\n        <Results payload={this.state} />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}